{"ast":null,"code":"var _jsxFileName = \"/home/rt/Projects/controller_led/color-picker/frontend/src/components/ColorPicker/ColorPicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nconst ColorPicker = () => {\n  _s();\n  const [color, setColor] = useState({\n    red: 0,\n    green: 0,\n    blue: 0\n  });\n  const [currentColor, setCurrentColor] = useState({\n    red: 0,\n    green: 0,\n    blue: 0\n  });\n  const handleColorChange = () => {\n    socket.emit('colorChange', color);\n  };\n  useEffect(() => {\n    const updateCurrentColor = newColor => setCurrentColor(newColor);\n    socket.on('currentColor', updateCurrentColor);\n    return () => {\n      socket.off('currentColor', updateCurrentColor);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ESP Color Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"red\",\n        children: \"Red:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"red\",\n        min: \"0\",\n        max: \"255\",\n        value: color.red,\n        onChange: e => setColor({\n          ...color,\n          red: parseInt(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), color.red]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"green\",\n        children: \"Green:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"green\",\n        min: \"0\",\n        max: \"255\",\n        value: color.green,\n        onChange: e => setColor({\n          ...color,\n          green: parseInt(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), color.green]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"blue\",\n        children: \"Blue:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"blue\",\n        min: \"0\",\n        max: \"255\",\n        value: color.blue,\n        onChange: e => setColor({\n          ...color,\n          blue: parseInt(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), color.blue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleColorChange,\n      children: \"Change Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100px',\n        height: '100px',\n        backgroundColor: `rgb(${currentColor.red}, ${currentColor.green}, ${currentColor.blue})`,\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorPicker, \"VvNLhmhUBfWgkfNJLFoEPwbiyYs=\");\n_c = ColorPicker;\nexport default ColorPicker;\nvar _c;\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","ColorPicker","_s","color","setColor","red","green","blue","currentColor","setCurrentColor","handleColorChange","emit","updateCurrentColor","newColor","on","off","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","min","max","value","onChange","e","parseInt","target","onClick","style","width","height","backgroundColor","marginTop","_c","$RefreshReg$"],"sources":["/home/rt/Projects/controller_led/color-picker/frontend/src/components/ColorPicker/ColorPicker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io();\n\nconst ColorPicker = () => {\n  const [color, setColor] = useState({ red: 0, green: 0, blue: 0 });\n  const [currentColor, setCurrentColor] = useState({ red: 0, green: 0, blue: 0 });\n\n  const handleColorChange = () => {\n    socket.emit('colorChange', color);\n  };\n\n  useEffect(() => {\n    const updateCurrentColor = (newColor) => setCurrentColor(newColor);\n    socket.on('currentColor', updateCurrentColor);\n\n    return () => {\n      socket.off('currentColor', updateCurrentColor);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>ESP Color Picker</h1>\n      <div>\n        <label htmlFor=\"red\">Red:</label>\n        <input\n          type=\"range\"\n          id=\"red\"\n          min=\"0\"\n          max=\"255\"\n          value={color.red}\n          onChange={(e) => setColor({ ...color, red: parseInt(e.target.value) })}\n        />\n        {color.red}\n      </div>\n      <div>\n        <label htmlFor=\"green\">Green:</label>\n        <input\n          type=\"range\"\n          id=\"green\"\n          min=\"0\"\n          max=\"255\"\n          value={color.green}\n          onChange={(e) => setColor({ ...color, green: parseInt(e.target.value) })}\n        />\n        {color.green}\n      </div>\n      <div>\n        <label htmlFor=\"blue\">Blue:</label>\n        <input\n          type=\"range\"\n          id=\"blue\"\n          min=\"0\"\n          max=\"255\"\n          value={color.blue}\n          onChange={(e) => setColor({ ...color, blue: parseInt(e.target.value) })}\n        />\n        {color.blue}\n      </div>\n      <button onClick={handleColorChange}>Change Color</button>\n\n      <div\n        style={{\n          width: '100px',\n          height: '100px',\n          backgroundColor: `rgb(${currentColor.red}, ${currentColor.green}, ${currentColor.blue})`,\n          marginTop: '20px',\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default ColorPicker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}